apiVersion: v1
items:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -o kube-config.yaml
        kompose.version: 1.22.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: app
      name: app
    spec:
      ports:
        - name: "8888"
          port: 8888
          targetPort: 5555
      selector:
        io.kompose.service: app
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -o kube-config.yaml
        kompose.version: 1.22.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: db
      name: db
    spec:
      ports:
        - name: "5000"
          port: 5000
          targetPort: 3306
      selector:
        io.kompose.service: db
    status:
      loadBalancer: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -o kube-config.yaml
        kompose.version: 1.22.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: app
      name: app
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: app
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -o kube-config.yaml
            kompose.version: 1.22.0 (HEAD)
          creationTimestamp: null
          labels:
            io.kompose.service: app
        spec:
          containers:
            - env:
                - name: MYSQL_DATABASE
                  value: cms
                - name: MYSQL_PASSWORD
                  value: pass@123
                - name: MYSQL_ROOT_PASSWORD
                  value: pass@123
                - name: MYSQL_USER
                  value: root
              image: app
              name: app
              ports:
                - containerPort: 5555
              resources: {}
              volumeMounts:
                - mountPath: /go
                  name: app-claim0
          restartPolicy: Always
          volumes:
            - name: app-claim0
              persistentVolumeClaim:
                claimName: app-claim0
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: app-claim0
      name: app-claim0
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -o kube-config.yaml
        kompose.version: 1.22.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: db
      name: db
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: db
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -o kube-config.yaml
            kompose.version: 1.22.0 (HEAD)
          creationTimestamp: null
          labels:
            io.kompose.service: db
        spec:
          containers:
            - env:
                - name: MYSQL_DATABASE
                  value: cms
                - name: MYSQL_PASSWORD
                  value: pass@123
                - name: MYSQL_ROOT_PASSWORD
                  value: pass@123
                - name: MYSQL_USER
                  value: root
              image: mysql:8.0.19
              name: db
              ports:
                - containerPort: 3306
              resources: {}
          restartPolicy: Always
    status: {}
kind: List
metadata: {}

